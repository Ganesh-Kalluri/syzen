#!/bin/bash

# Update and upgrade the system
sudo apt update
sudo apt upgrade -y

# Install Git and clone the repository
sudo apt install -y git
git clone https://github.com/Ganesh-Kalluri/delton.git leewise

# Install Python 3.12 (as it's your preferred version) and pip
sudo apt install -y software-properties-common
sudo add-apt-repository ppa:deadsnakes/ppa -y
sudo apt update
sudo apt install -y python3.12 python3.12-venv python3.12-dev

# Update python3 symlink to point to python3.12
sudo rm /usr/bin/python3
sudo ln -s /usr/bin/python3.12 /usr/bin/python3

# Install pip for Python 3.12
sudo apt install -y curl
curl -sS https://bootstrap.pypa.io/get-pip.py | sudo python3.12
python3.12 -m pip install ipython

# Install PostgreSQL 16
sudo apt install wget ca-certificates -y
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
sudo apt update
sudo apt install -y postgresql-16 postgresql-client-16

# Create PostgreSQL user for Leewise
sudo -u postgres psql -c "CREATE USER leewise WITH SUPERUSER CREATEDB CREATEROLE LOGIN;"

# Set up the virtual environment and install dependencies
python3.12 -m venv ~/venv
source ~/venv/bin/activate
cd leewise
sudo apt install -y python3-pip libldap2-dev libpq-dev libsasl2-dev
pip install pyjwt
sudo apt install wkhtmltopdf
python3.12 -m pip install -r requirements.txt

# Open ports for HTTP, PostgreSQL, Leewise, and Email services
sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 8069 -j ACCEPT
sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 8072 -j ACCEPT
sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 5432 -j ACCEPT
sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 443 -j ACCEPT
sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 80 -j ACCEPT
sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 53 -j ACCEPT
sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 25 -j ACCEPT
sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 465 -j ACCEPT
sudo iptables -I INPUT 6 -m state --state NEW -p tcp --dport 587 -j ACCEPT

# Install and configure Nginx
sudo apt install nginx -y
sudo ufw allow 'Nginx Full'
sudo ufw allow OpenSSH
sudo ufw enable

# Remove default site configs
sudo rm /etc/nginx/sites-enabled/default
sudo rm /etc/nginx/sites-available/default

# Create leewise Nginx config
cat <<EOL | sudo tee /etc/nginx/sites-available/leewise.conf
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}
server {
    server_name www.leewise.in;

    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    proxy_set_header X-Client-IP $remote_addr;

    access_log /var/log/nginx/leewise-access.log;
    error_log /var/log/nginx/leewise-error.log;

    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    proxy_read_timeout 900s;
    proxy_connect_timeout 900s;
    proxy_send_timeout 900s;

    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

    types {
        text/less less;
        text/scss scss;
    }

    gzip on;
    gzip_min_length 1100;
    gzip_buffers 4 32k;
    gzip_types text/css text/less text/plain text/xml application/xml application/json application/javascript application/pdf image/jpeg image/png;
    gzip_vary on;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 64k;
    client_max_body_size 0;

    location / {
        proxy_pass http://localhost:8069;
        proxy_redirect off;
    }

    location /websocket {
         proxy_pass http://localhost:8072;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection $connection_upgrade;
         proxy_set_header X-Forwarded-Host $host;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
         proxy_set_header X-Real-IP $remote_addr;
   }
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires 2d;
        proxy_pass http://localhost:8069;
        add_header Cache-Control "public, no-transform";
    }

    location ~ /[a-zA-Z0-9_-]*/static/ {
        proxy_cache_valid 200 302 60m;
        proxy_cache_valid 404 1m;
        proxy_buffering on;
        expires 864000;
        proxy_pass http://localhost:8069;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.leewise.in/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.leewise.in/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    listen 80;
    server_name www.leewise.in;
    return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
}
EOL

# Enable leewise Nginx config
sudo ln -s /etc/nginx/sites-available/leewise.conf /etc/nginx/sites-enabled/leewise.conf
sudo nginx -t
sudo service nginx restart

# Install Certbot for SSL
sudo apt install certbot python3-certbot-nginx -y
sudo certbot --nginx -d www.leewise.in

# Create Leewise service file
sudo nano /etc/systemd/system/leewise.service
cat <<EOL | sudo tee /etc/systemd/system/leewise.service
[Unit]
Description=Leewise Service
Requires=postgresql.service
After=network.target

[Service]
User=ubuntu
Group=ubuntu
WorkingDirectory=/home/
ExecStart=/home/ubuntu/venv/bin/python3 /home/ubuntu/leewise/leewise-bin -c /home/ubuntu/leewise/debian/leewise.conf
Restart=always

[Install]
WantedBy=multi-user.target
EOL

# Reload systemd, enable and start the service
sudo systemctl daemon-reload
sudo systemctl enable leewise.service
sudo systemctl start leewise.service
